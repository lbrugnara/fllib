
compile fl-objects {
    includes: [ ],
    output_dir: "obj/",
    sources: [ 
        "src/containers/[^/]*[.]c$"
        "src/os/[^W/]*[.]c$"
        "src/text/[^/]*[.]c$"
        "src/threading/[^/]*[.]c$"
        "src/[^/]*[.]c$"
    ],

    for win-cmd {
        sources: [
            "src/os/WinEx.c"
        ]
    }
}

archive fllib-static {
    output_name: "libfl",
    output_dir: "build/",
    actions: {
        before: [],
        after: []
    },
    objects: [
        fl-objects
    ]
}

compile fl-tests-objects {
    includes: [ 
        "./include"
    ],
    output_dir: "tests/obj",
    sources: [
        "tests/.*[.]c$"
    ]
}

executable fl-tests {
    output_name: "tests",
    output_dir: "tests/build",
    actions: {
        before: [],
        after: []
    },
    objects: [
        fl-tests-objects,
        fllib-static
    ]

    for linux-bash {
        libraries: [
            { name: "m" },
            { name: "pthread" }
        ]
    }
}

executable fl-tests-sanitize {
    output_name: "tests",
    output_dir: "tests/build",
    actions: {
        # before: [ clean, clean-tests ]
        after: [ `.\tests\build\clang-debug-sanitize\tests.exe` ]
    }
    for win-cmd {
        libraries: [
            {
                path: "D:\dev\LLVM\x86\lib\clang\8.0.0\lib\windows"
            }
        ]
        objects: [
            "clang_rt.ubsan_standalone-i386.lib",
            "clang_rt.asan-i386.lib",
            "clang_rt.builtins-i386.lib",
        ]
    }

    for linux-bash {
        libraries: [
            { name: "m" },
            { name: "pthread" }
        ]
    }

    objects: [
        fl-tests-objects,
        fllib-static,
    ]
}
